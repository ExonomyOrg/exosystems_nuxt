name: Update Parent Issues on Comment

on:
  issue_comment:
    types: [created]

permissions:
  issues: write
  pull-requests: read
  contents: read

jobs:
  update-parent-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Authenticate with GitHub CLI
        run: gh auth login --with-token <<< ${{ secrets.GITHUB_TOKEN }}

      - name: Update Parent Issues
        run: |
          set -e

          ISSUE_NUMBER=${{ github.event.issue.number }}
          REPO=${{ github.repository }}

          # Fetch the issue body
          BODY=$(gh issue view $ISSUE_NUMBER --json body -q .body)

          # Extract the "Parents:" line from the body, excluding quoted lines
          PARENTS_LINE=$(echo "$BODY" | grep -oP '^(?!.*\").*Parents:\s*#[0-9, ]+')

          if [ -z "$PARENTS_LINE" ]; then
            echo "No Parents found for #$ISSUE_NUMBER, exiting."
            exit 0
          fi

          # Extract parent issue numbers
          PARENT_IDS=$(echo "$PARENTS_LINE" | grep -oP '#\d+' | grep -oP '\d+')

          for PARENT_ID in $PARENT_IDS; do
            # Fetch the current parent issue description
            PARENT_DESCRIPTION=$(gh issue view $PARENT_ID --json body -q .body)

            # Fetch all child issues that reference this specific parent ID
            CHILD_ISSUES=$(gh issue list --repo $REPO --search "Parents: #$PARENT_ID" --json number,title,comments --jq '.[] | [.number, .title] | @tsv')

            # Format the child issues as a list
            CHILDREN_LIST=$(echo "$CHILD_ISSUES" | awk '{printf "- [%s](https://github.com/'$REPO'/issues/%s)\n", $2, $1}')

            # Check if "Children:" already exists, if so, remove it
            UPDATED_DESCRIPTION=$(echo "$PARENT_DESCRIPTION" | sed '/^Children:/d')

            # Insert the new Children line at the top of the description
            FINAL_DESCRIPTION=$(echo -e "Children:\n$CHILDREN_LIST\n\n$UPDATED_DESCRIPTION")

            # Update the parent issue with the new description
            gh issue edit $PARENT_ID --body "$FINAL_DESCRIPTION"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
